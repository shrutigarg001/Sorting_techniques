class Solution { 
    private: 
    bool valid(char ch) 
    {
        if((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9')) 
        {
            return true; 
        } 
        else 
        {
            return false; 
        }
    } 
    
    char lowercase(char ch) 
    {
        if((ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9')) 
        {
            return ch; 
        } 
        else 
        { 
            char temp=ch-'A'+'a'; 
            return temp; 
        }
    } 
    
    bool palidrome(string str) 
    {
        int s=0,e=str.length()-1; 
        
        while(s <= e) 
        {
            if(str[s] != str[e]) 
            {
                return false; 
            } 
            else 
            {
                s++; 
                e--; 
            }
        } 
        return true; 
    }
public:
    bool isPalindrome(string s) {
        int n=s.size(); 
        
        string temp=""; 
        for(int i=0;i<n;i++) 
        {
            if(valid(s[i]) == true) 
            {
                temp.push_back(s[i]); 
            }
        } 
        //cout << temp; 
        
        for(int i=0;i<temp.size();i++) 
        {
            temp[i] = lowercase(temp[i]); 
        } 
        
        // palindrome 
        return palidrome(temp); 
    }
}; 

// time complexity : o(n) 
// space complexity : o(n) 
