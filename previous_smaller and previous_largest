#include <bits/stdc++.h>
using namespace std; 

void previous_smaller(int arr[], int n) 
{
  stack<int> s; 

  for(int i=0;i<n;i++) 
    {
      while((s.empty() == false) && (arr[s.top()] >= arr[i])) 
        {
          s.pop(); 
        } 
      if(s.empty() == true) 
      {
        cout << "-1 "; 
      } 
      else 
      {
        cout << s.top() << " "; 
      } 
      s.push(i); 
    }
} 

void previous_largest(int arr[], int n) 
{
  stack<int> s; 

  for(int i=0;i<n;i++) 
    {
      while((s.empty() == false) && (arr[s.top()] <= arr[i])) 
        {
          s.pop(); 
        } 
      if(s.empty() == true) 
      {
        cout << "-1 "; 
      } 
      else 
      {
        cout << s.top() << " "; 
      } 
      s.push(i); 
    }
} 

int main() {
    int arr[8]={4,10,5,8,20,15,3,12}; 
    previous_smaller(arr, 8); 
  cout << endl; 
    previous_largest(arr, 8); 
    return 0;
}  

// time complexity : o(n) 
// space complexity :o(n) 
